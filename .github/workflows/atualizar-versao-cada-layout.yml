name: Atualizar Versão de Cada Layout
on:
  workflow_run:
    workflows: ["Criar Tag e Release"]  # Espera a execução do workflow "Criar Tag e Release"
    types: [completed]  # Executa quando o workflow "Criar Tag e Release" for completado (independentemente de sucesso ou falha)

permissions:
  contents: read  # Permission to read contents/artifacts]  # Permite ao GITHUB_TOKEN fazer push para o repositório

jobs:
  executa-script-py:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'  # Especifica a versão do Python que você deseja

      - name: Install gitpython
        run: |
          pip install gitpython


          
      - name: Configurar o token do GitHub CLI
        run: |
          echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          
      - name: Listar todos os artefatos no repositório
        run: |
          gh artifact list --repo ${{ github.repository }}  # Lista todos os artefatos no repositório
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Usando o token correto para autenticação
       
      - name: Baixar artefato com o nome da branch
        uses: actions/download-artifact@v4
        with:
          name: branch-name-artifact  # Nome do artefato (deve ser o mesmo usado no upload)
          path: "./temp"  # Caminho onde o artefato será extraído (diretório temporário para salvar o arquivo)
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}   

      - name: Verificar o conteúdo do artefato
        run: |
          # Listando os arquivos extraídos para verificar onde está o arquivo
          echo "Verificando arquivos extraídos do artefato:"
          ls -lh ${{ github.workspace }}

          # Checando se o arquivo 'branch-name.txt' está na pasta do artefato
          if [ -f "${{ github.workspace }}/branch-name.txt" ]; then
            BRANCH_NAME=$(cat "${{ github.workspace }}/branch-name.txt")
            echo "Nome da branch extraído: $BRANCH_NAME"
          else
            echo "O arquivo branch-name.txt não foi encontrado!"
            exit 1
          fi

      - name: Debug GitHub context
        run: |
          echo "GitHub Token: ${{ secrets.GH_TOKEN }}"
          echo "Nome da Branch: $BRANCH_NAME"
          echo "Base Ref (branch de destino): ${{ github.base_ref }}"          

      - name: Run script atualizar-versao-cada-layout
        run: |
          python scripts/atualizar-versao-cada-layout.py ${{ secrets.GH_TOKEN }} $BRANCH_NAME ${{ github.base_ref }}
