name: Atualizar Versão de Cada Layout
on:
  workflow_run:
    workflows: ["Criar Tag e Release"]  # Espera a execução do workflow "Criar Tag e Release"
    types: [completed]  # Executa quando o workflow "Criar Tag e Release" for completado (independentemente de sucesso ou falha)

permissions:
  contents: read  # Permission to read contents/artifacts]  # Permite ao GITHUB_TOKEN fazer push para o repositório

jobs:
  executa-script-py:
    runs-on: ubuntu-latest
    steps:
    
      - uses: actions/checkout@v3

      - name: Set up Python environment
        uses: actions/setup-python@v3
        with:
          python-version: '3.x'  # Especifica a versão do Python que você deseja

      - name: Install gitpython
        run: |
          pip install gitpython

      - name: Configurar o token do GitHub CLI
        run: |
          echo "GITHUB_TOKEN=${{ secrets.GH_TOKEN }}" >> $GITHUB_ENV
          
      - name: Listar todas as execuções de workflows
        run: |
          gh run list --repo deyvidksc/winthor-smart-hub-layouts  # Lista todas as execuções de workflow no repositório
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Usando o token correto para autenticação
       
      - name: Listar todas as execuções de workflows e extrair o nome da branch
        run: |
          # Lista todas as execuções de workflow no repositório, filtrando pelo nome do workflow e pelo status de sucesso
          workflow_runs=$(gh run list --repo ${{ github.repository }} --workflow "Criar Artefato com Nome da Branch" --json headBranch,status -q 'map(select(.status == "completed" and .conclusion == "success")) | .[].headBranch')
          
          # Exibe o resultado da lista para debug
          echo "Execuções de workflow 'Criar Artefato com Nome da Branch' bem-sucedidas encontradas: $workflow_runs"
          
          # Extrai o nome da primeira branch (ou outra lógica para selecionar a branch desejada)
          BRANCH_NAME=$(echo "$workflow_runs" | jq -r '.[0]')
          
          # Exibe o nome da branch extraído
          echo "Nome da branch extraído: $BRANCH_NAME"
        
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}  # Usando o token correto para autenticação
          
      

      - name: Run script atualizar-versao-cada-layout
        run: |
          python scripts/atualizar-versao-cada-layout.py ${{ secrets.GH_TOKEN }} $BRANCH_NAME ${{ github.base_ref }}
