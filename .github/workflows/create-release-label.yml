name: CI/CD - Criar Tag de Release

on:
  pull_request:
    types:
      - closed
    branches:
      - main
      - develop

jobs:
  release-on-push:
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Use o token correto aqui
    steps:
      - name: Checkout do código
        uses: actions/checkout@v3

      - name: Ler versão atual
        id: read_version
        run: |
          VERSION_FILE="version.txt"
          if [[ -f "$VERSION_FILE" ]]; then
            VERSION=$(cat $VERSION_FILE)
          else
            VERSION="1.0.0.0"  # Caso o arquivo de versão não exista, começar com a versão inicial
          fi
          echo "VERSAO_ATUAL=$VERSION" >> $GITHUB_ENV

      - name: Incrementar versão
        id: increment_version
        run: |
          VERSION=${{ env.VERSAO_ATUAL }}
          BRANCH_NAME=${GITHUB_REF#refs/heads/}

          # Define a versão com base na branch
          if [[ "$BRANCH_NAME" == "main" ]]; then
            # Incrementa a versão da branch main
            IFS='.' read -r -a version_parts <<< "$VERSION"
            version_parts[1]=$((version_parts[1] + 1))  # Incrementa a versão minor
            version_parts[2]=0  # Reseta a versão patch
            version_parts[3]=1  # Define build como 1
            NEW_VERSION="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}.${version_parts[3]}"
          elif [[ "$BRANCH_NAME" == "develop" ]]; then
            # Incrementa a versão da branch develop
            IFS='.' read -r -a version_parts <<< "$VERSION"
            version_parts[1]=$((version_parts[1] + 1))  # Incrementa a versão minor
            version_parts[2]=0  # Reseta a versão patch
            version_parts[3]=1  # Define build como 1
            NEW_VERSION="${version_parts[0]}.${version_parts[1]}.${version_parts[2]}.${version_parts[3]}"
          else
            echo "Branch não reconhecida para incremento de versão."
            exit 1
          fi

          echo "Nova versão: $NEW_VERSION"
          echo "NEW_VERSION=$NEW_VERSION" >> $GITHUB_ENV

      - name: Atualizar o arquivo de versão
        run: |
          echo ${{ env.NEW_VERSION }} > version.txt
          git config --global user.name "GitHub Actions"
          git config --global user.email "actions@github.com"
          git add version.txt
          git commit -m "Atualizando versão para ${{ env.NEW_VERSION }}"
          git push origin ${{ github.ref }}

      - name: Gerar Release
        uses: rymndhng/release-on-push-action@master
        with:
          bump_version_scheme: minor
          use_github_release_notes: true
